  Lesson 5: Handling Slow APIs & Using Async/Await for Cleaner Code
 
 Official Definition (Technical)
Slow APIs: Sometimes, APIs take time to respond due to network latency or server load. Handling this properly ensures a smooth user experience.
Async/Await: A modern way to handle asynchronous operations in JavaScript, making API calls cleaner and easier to read.


üß∏ Explanation for a 5-Year-Old
Imagine you're waiting for a pizza üçï delivery.

You call the restaurant (make an API request).
While waiting, you watch TV instead of just standing at the door (handle loading states).
When the pizza arrives, you open the door and take it (get data from the API).
If the delivery takes too long or fails, you call and ask what happened (handle errors).


Why is This Important?
‚úÖ Prevents app freezing while waiting for slow APIs.
‚úÖ Enhances user experience with proper loading indicators.
‚úÖ Makes API requests easier to read and maintain using Async/Await.
‚úÖ Helps React components efficiently handle API calls.

üîπ Async/Await vs Promises
Feature	Promises (.then())	Async/Await
Readability	More complex	Cleaner & more readable
Error Handling	Uses .catch()	Uses try...catch
Nested Calls	Can become "callback hell"	Works sequentially